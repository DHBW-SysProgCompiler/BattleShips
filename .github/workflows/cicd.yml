name: C/C++ CI

on:  [push]
  #pull_request:
  #  branches: [ dev, master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.PAT }}
        submodules: true
    - name: List submodule files
      run: |
        ls -la
        echo -e "\n\n\n"
        echo -e "Submodule files"
        ls -la ./modules
    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.apt-cache
        key: ${{ runner.os }}-apt-${{ hashFiles('**/cicd.yml') }}
    - name: install dependencies
      run: |
        sudo apt-get update --download-only -o dir::cache::archives="${{ steps.cache-deps.outputs.cache-hit != 'true' && '~/.apt-cache' || '' }}"
        sudo apt-get install -y gcc-arm-none-eabi cmake gdb-multiarch qemu-system-arm
    - name: configure
      run: cmake --preset arm-cortex-m0-unix
    - name: build
      run: cmake --build --preset arm-cortex-m0-unix
    - name: Create Check Status Run
      uses: actions/github-script@v5
      with:
        script: |
          const { owner, repo } = context.repo
          const { number } = context.issue
          const { id } = context.runId
          const conclusion = context.job.status === 'success' ? 'success' : 'failure'
          await github.checks.create({
            owner,
            repo,
            name: 'C/C++ CI',
            head_sha: github.context.sha,
            status: 'completed',
            conclusion: conclusion,
            output: {
              title: 'C/C++ CI',
              summary: 'The result of the CI build',
              text: `The build ${conclusion === 'success' ? 'succeeded' : 'failed'}.`
            }
          })